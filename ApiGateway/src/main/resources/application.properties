spring.application.name=api-gateway
server.port=5555

#默认只公开了/health和/info端点，要想暴露所有端点只需设置成星号即可
management.endpoints.web.exposure.include=*
#显式启用/shutdown端点
management.endpoint.shutdown.enabled=true
#要公开所有（已启用）网络端点除env端点之外
#management.endpoints.web.exposure.exclude=env
#设置管理服务的上下文路径，默认值为""
#management.server.servlet.context-path=""
#设置管理服务的端口
#management.server.port=8081
#设置管理端点的基本路径，默认值为：actuator，改了turbine监控端点也要修改，
#如果想还和1.5版本的路径一样直接访问http://localhost:8088/health， 只需要配置management.endpoints.web.base-path=/ 即可，也不需要配置management.server.servlet.context-path了
#management.endpoints.web.base-path=/

#hystirx全局配置:用hystrix.command.default开头
#配置hystrix超时时间，默认1000ms，要大于ribbon超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=8000
#feign ribbon全局配置:ribbon.<key>=<value>
ribbon.ConnectTimeout=1000
ribbon.ReadTimeout=3000
#feign ribbon指定客户端配置:<client>.ribbon.<key>=<value>,<client>采用@FeignClient注解name或value属性指定服务名,必须区分大小写
#ribbon请求连接超时时间，默认2s
hello-service.ribbon.ConnectTimeout=500
#ribbon请求处理超时时间，默认5s
hello-service.ribbon.ReadTimeout=2500

####访问zuul服务器/actuator/routes接口可查看路由信息,path非通配符部分字符串默认为该服务路由前缀
#测试地址为:http://localhost:5555/api/api-a/hello?accessToken=token http://localhost:5555/api/api-b/feign-consumer?accessToken=token

#一、传统路由配置:
#1.单实例:使用zuul.routes.<route>.path和zuul.routes.<route>.url
#zuul.routes.user-service.path=/user-service/**
#zuul.routes.user-service.url=http://localhost:8080/
#2.多实例:使用zuul.routes.<route>.path和zuul.routes.<route>.serviceId
#ribbon.eureka.enable=false
#user-service.ribbon.listOfServers=http://localhost:8080/,http://localhost:8081/
#zuul.routes.user-service.path=/user-service/**
#zuul.routes.user-service.serviceId=user-service

#二、面向服务路由配置:
#1.使用zuul.routes.<route>.path和zuul.routes.<route>.serviceId,<route>可以指定任意路由名称
#zuul.routes.api-a.path=/api-a/**
#zuul.routes.api-a.serviceId=hello-service
zuul.routes.api-b.path=/api-b/**
zuul.routes.api-b.serviceId=feign-consumer
#2.还可以使用一种简洁的写法:zuul.routes.<serviceId>=<path>,!!!重要->>经测试改写法无法确定<route>等于多少,zuul.routes.<route>.strip-prefix无法使用
zuul.routes.hello-service=/api-a/**
#zuul.routes.feign-consumer=/api-b/**
#3.服务路由的默认规则:基于Eureka的zuul会为每个服务自动创建一个默认路由规则,path会使用serviceId配置的服务名作为请求前缀
#使用zuul.ignored-services参数设置一个服务名匹配表达式来定义不自动创建路由的规则
zuul.ignored-services=*

#三、路径匹配:
#1.path采用Ant风格,?匹配任意单个字符,*匹配任意数量字符不支持多级目录,**匹配任意数量字符支持多级目录
#2.zuul只能使用YAML配置文件,实现有序路由规则:参见YAML文件内容
#3.忽略表达式参数zuul.ignored-patterns可以设置不希望被网关进行路由的URL表达式
zuul.ignored-patterns=/**/hello1/**

#四、path公共路由前缀:
zuul.prefix=/api

#五、转发请求地址是否移除路由前缀:默认为true-移除路由前缀再转发请求,一般被转发的服务如果存在web上下文路径才设置为false
#1.通过设置zuul.strip-prefix=false关闭移除zuul.prefix属性设置的公共路由前缀,如/api
#zuul.strip-prefix=false
#2.通过设置zuul.routes.<route>.strip-prefix=false关闭移除具体服务路由前缀,如/api-b
zuul.routes.api-b.strip-prefix=false

eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/
